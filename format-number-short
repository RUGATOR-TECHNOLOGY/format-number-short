
 * Description: Plugin para formatear números reducir la unidad más pequeña. Eje: 1000 = 1K | 1000000 = 1M | 1000000000 = 1B [fns_format_number]1000[/fns_format_number].
 * Version: 1.0.0
 *
 * Requires at least: 4.0
 * Requires PHP: 5.6
 *
 * Author: RUGATOR
 * Author URI: https://rugator.com/
 * License: MIT
 * License URI: https://opensource.org/license/mit/
 * Update URI: https://github.com/RUGATOR-TECHNOLOGY/format-number-short
 * Text Domain: format-number-short
 * Domain Path: /languages
 */

// Verifica si se accede directamente al archivo del plugin y redirige al usuario
if (!defined('ABSPATH')) {
    exit; // Sal del archivo si se accede directamente
}

if (!function_exists('fns_wporg_add_privacy_policy_content')) {
    /**
     * Adds a privacy policy statement.
     */
    function fns_wporg_add_privacy_policy_content() {
        $content = '<p class="privacy-policy-tutorial">' . __('Some introductory content for the suggested text.', 'format-number-short') . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __('Suggested Text:', 'format-number-short') . '</strong> '
            . sprintf(
                __('When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'format-number-short'),
                'https://rugator.com/privacy'
            );
        if (function_exists('wp_add_privacy_policy_content')) {
            wp_add_privacy_policy_content('Example Plugin', wp_kses_post(wpautop($content, false)));
        }
    }
}

// Eliminar el shortcode si ya está registrado
if (shortcode_exists('fns_rugator_format_number_short')) {
    remove_shortcode('fns_rugator_format_number_short');
}

// Función formatear números: Ejemplo 1000 = 1K
function fns_format_number_shortcode($atts, $content = null) {
    // Eliminar espacios en blanco alrededor del contenido
    $content = trim($content);

    // Verificar si el contenido es un número válido
    if (is_numeric($content)) {
        // Formatear el número según su tamaño
        if ($content >= 1000 && $content < 1000000) {
            $format = number_format($content / 1000, 1) . 'K';
        } elseif ($content >= 1000000 && $content < 1000000000) {
            $format = number_format($content / 1000000, 1) . 'M';
        } elseif ($content >= 1000000000 && $content < 1000000000000) {
            $format = number_format($content / 1000000000, 1) . 'B';
        } else {
            $format = number_format($content);
        }

        return $format;
    }
    // Si el contenido no es un número válido, se devuelve sin cambios
    return $content;
}
// Registrar el shortcode original
add_shortcode('fns_rugator_format_number_short', 'fns_format_number_shortcode');

// Registrar un alias más corto del shortcode
add_shortcode('fns_format_number', 'fns_format_number_shortcode');
